uint8_t padZeroSysex[12] = { 0xF0, 0x47, 0x7F, 0x43, // Start, Manufacturer, All-Call, Model
	0x65, 0x00, 0x04, // Pad command
	0x00, 0x00, 0x00, 0x00,
	0xF7
};

uint8_t sysexIntro[7] = { 0xF0, 0x47, 0x7F, 0x43, // Start, Manufacturer, All-Call, Model
	0x65, 0x00, 0x00 // Pad command
};

// Taken from my Faya module for Akai Fire
// See https://framagit.org/Simon-L/midimodules
// This file is in most part copy-pasted from Paul Curtis blog, hence the different lettercasing/code style https://blog.segger.com/decoding-the-akai-fire-part-1/

uint8_t BitMutate[8][7] = {
  { 13,  19,  25,  31,  37,  43,  49 },
  {  0,  20,  26,  32,  38,  44,  50 },
  {  1,   7,  27,  33,  39,  45,  51 },
  {  2,   8,  14,  34,  40,  46,  52 },
  {  3,   9,  15,  21,  41,  47,  53 },
  {  4,  10,  16,  22,  28,  48,  54 },
  {  5,  11,  17,  23,  29,  35,  55 },
  {  6,  12,  18,  24,  30,  36,  42 }
};

// DO NOT DELETE
// v v DO NOT DELETE
uint8_t OLEDBitmap[1174] = {0x00, 0x07, 0x00, 0x7F};	
// ^ ^ DO NOT DELETE

void PlotPixel(unsigned x, unsigned y, uint8_t c) {
	unsigned RemapBit;
	if (x < 128 && y < 64) {
		// Unwind 128x64 arrangement into a 1024x8 arrangement of pixels.
		x += 128 * (y/8);
		y %= 8;
		// Remap by tiling 7x8 block of translated pixels.
		RemapBit = BitMutate[y][x % 7];
		if (c > 0) {
			OLEDBitmap[4 + x/7*8 + RemapBit/7] |= 1u << (RemapBit % 7);
		} else {
			OLEDBitmap[4 + x/7*8 + RemapBit/7] &= ~(1u << (RemapBit % 7));
		}
	}
	else {
		printf("outside of range! %d %d\n", x, y);

	}
}

void clearScreen() {
	for (uint8_t x = 0; x < 128; ++x) {
		for (uint8_t y = 0; y < 64; ++y) {
			PlotPixel(x, y, 0);
		}
	}
}

unsigned char letters[95][13] = {
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},// space :32
	{0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18},// ! :33
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36, 0x36, 0x36},
	{0x00, 0x00, 0x00, 0x66, 0x66, 0xff, 0x66, 0x66, 0xff, 0x66, 0x66, 0x00, 0x00},
	{0x00, 0x00, 0x18, 0x7e, 0xff, 0x1b, 0x1f, 0x7e, 0xf8, 0xd8, 0xff, 0x7e, 0x18},
	{0x00, 0x00, 0x0e, 0x1b, 0xdb, 0x6e, 0x30, 0x18, 0x0c, 0x76, 0xdb, 0xd8, 0x70},
	{0x00, 0x00, 0x7f, 0xc6, 0xcf, 0xd8, 0x70, 0x70, 0xd8, 0xcc, 0xcc, 0x6c, 0x38},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1c, 0x0c, 0x0e},
	{0x00, 0x00, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x18, 0x0c},
	{0x00, 0x00, 0x30, 0x18, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x18, 0x30},
	{0x00, 0x00, 0x00, 0x00, 0x99, 0x5a, 0x3c, 0xff, 0x3c, 0x5a, 0x99, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0xff, 0xff, 0x18, 0x18, 0x18, 0x00, 0x00},
	{0x00, 0x00, 0x30, 0x18, 0x1c, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x60, 0x60, 0x30, 0x30, 0x18, 0x18, 0x0c, 0x0c, 0x06, 0x06, 0x03, 0x03},
	{0x00, 0x00, 0x3c, 0x66, 0xc3, 0xe3, 0xf3, 0xdb, 0xcf, 0xc7, 0xc3, 0x66, 0x3c},
	{0x00, 0x00, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x78, 0x38, 0x18},
	{0x00, 0x00, 0xff, 0xc0, 0xc0, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x03, 0xe7, 0x7e},
	{0x00, 0x00, 0x7e, 0xe7, 0x03, 0x03, 0x07, 0x7e, 0x07, 0x03, 0x03, 0xe7, 0x7e},
	{0x00, 0x00, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0xff, 0xcc, 0x6c, 0x3c, 0x1c, 0x0c},
	{0x00, 0x00, 0x7e, 0xe7, 0x03, 0x03, 0x07, 0xfe, 0xc0, 0xc0, 0xc0, 0xc0, 0xff},
	{0x00, 0x00, 0x7e, 0xe7, 0xc3, 0xc3, 0xc7, 0xfe, 0xc0, 0xc0, 0xc0, 0xe7, 0x7e},
	{0x00, 0x00, 0x30, 0x30, 0x30, 0x30, 0x18, 0x0c, 0x06, 0x03, 0x03, 0x03, 0xff},
	{0x00, 0x00, 0x7e, 0xe7, 0xc3, 0xc3, 0xe7, 0x7e, 0xe7, 0xc3, 0xc3, 0xe7, 0x7e},
	{0x00, 0x00, 0x7e, 0xe7, 0x03, 0x03, 0x03, 0x7f, 0xe7, 0xc3, 0xc3, 0xe7, 0x7e},
	{0x00, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x30, 0x18, 0x1c, 0x1c, 0x00, 0x00, 0x1c, 0x1c, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x60, 0x30, 0x18, 0x0c, 0x06},
	{0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60},
	{0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x18, 0x0c, 0x06, 0x03, 0xc3, 0xc3, 0x7e},
	{0x00, 0x00, 0x3f, 0x60, 0xcf, 0xdb, 0xd3, 0xdd, 0xc3, 0x7e, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0xc3, 0xc3, 0xc3, 0x66, 0x3c, 0x18},
	{0x00, 0x00, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe},
	{0x00, 0x00, 0x7e, 0xe7, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xe7, 0x7e},
	{0x00, 0x00, 0xfc, 0xce, 0xc7, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc7, 0xce, 0xfc},
	{0x00, 0x00, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xfc, 0xc0, 0xc0, 0xc0, 0xc0, 0xff},
	{0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xfc, 0xc0, 0xc0, 0xc0, 0xff},
	{0x00, 0x00, 0x7e, 0xe7, 0xc3, 0xc3, 0xcf, 0xc0, 0xc0, 0xc0, 0xc0, 0xe7, 0x7e},
	{0x00, 0x00, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3},
	{0x00, 0x00, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e},
	{0x00, 0x00, 0x7c, 0xee, 0xc6, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06},
	{0x00, 0x00, 0xc3, 0xc6, 0xcc, 0xd8, 0xf0, 0xe0, 0xf0, 0xd8, 0xcc, 0xc6, 0xc3},
	{0x00, 0x00, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0},
	{0x00, 0x00, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xdb, 0xff, 0xff, 0xe7, 0xc3},
	{0x00, 0x00, 0xc7, 0xc7, 0xcf, 0xcf, 0xdf, 0xdb, 0xfb, 0xf3, 0xf3, 0xe3, 0xe3},
	{0x00, 0x00, 0x7e, 0xe7, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xe7, 0x7e},
	{0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe},
	{0x00, 0x00, 0x3f, 0x6e, 0xdf, 0xdb, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0x66, 0x3c},
	{0x00, 0x00, 0xc3, 0xc6, 0xcc, 0xd8, 0xf0, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe},
	{0x00, 0x00, 0x7e, 0xe7, 0x03, 0x03, 0x07, 0x7e, 0xe0, 0xc0, 0xc0, 0xe7, 0x7e},
	{0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xff},
	{0x00, 0x00, 0x7e, 0xe7, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3},
	{0x00, 0x00, 0x18, 0x3c, 0x3c, 0x66, 0x66, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3},
	{0x00, 0x00, 0xc3, 0xe7, 0xff, 0xff, 0xdb, 0xdb, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3},
	{0x00, 0x00, 0xc3, 0x66, 0x66, 0x3c, 0x3c, 0x18, 0x3c, 0x3c, 0x66, 0x66, 0xc3},
	{0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x3c, 0x66, 0x66, 0xc3},
	{0x00, 0x00, 0xff, 0xc0, 0xc0, 0x60, 0x30, 0x7e, 0x0c, 0x06, 0x03, 0x03, 0xff},
	{0x00, 0x00, 0x3c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3c},
	{0x00, 0x03, 0x03, 0x06, 0x06, 0x0c, 0x0c, 0x18, 0x18, 0x30, 0x30, 0x60, 0x60},
	{0x00, 0x00, 0x3c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x3c},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x66, 0x3c, 0x18},
	{0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x38, 0x30, 0x70},
	{0x00, 0x00, 0x7f, 0xc3, 0xc3, 0x7f, 0x03, 0xc3, 0x7e, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xfe, 0xc3, 0xc3, 0xc3, 0xc3, 0xfe, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0},
	{0x00, 0x00, 0x7e, 0xc3, 0xc0, 0xc0, 0xc0, 0xc3, 0x7e, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x7f, 0xc3, 0xc3, 0xc3, 0xc3, 0x7f, 0x03, 0x03, 0x03, 0x03, 0x03},
	{0x00, 0x00, 0x7f, 0xc0, 0xc0, 0xfe, 0xc3, 0xc3, 0x7e, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x30, 0x30, 0x30, 0x30, 0x30, 0xfc, 0x30, 0x30, 0x30, 0x33, 0x1e},
	{0x7e, 0xc3, 0x03, 0x03, 0x7f, 0xc3, 0xc3, 0xc3, 0x7e, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xfe, 0xc0, 0xc0, 0xc0, 0xc0},
	{0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x18, 0x00},
	{0x38, 0x6c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x00, 0x00, 0x0c, 0x00},
	{0x00, 0x00, 0xc6, 0xcc, 0xf8, 0xf0, 0xd8, 0xcc, 0xc6, 0xc0, 0xc0, 0xc0, 0xc0},
	{0x00, 0x00, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x78},
	{0x00, 0x00, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xfe, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xfc, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00},
	{0xc0, 0xc0, 0xc0, 0xfe, 0xc3, 0xc3, 0xc3, 0xc3, 0xfe, 0x00, 0x00, 0x00, 0x00},
	{0x03, 0x03, 0x03, 0x7f, 0xc3, 0xc3, 0xc3, 0xc3, 0x7f, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xe0, 0xfe, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xfe, 0x03, 0x03, 0x7e, 0xc0, 0xc0, 0x7f, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x1c, 0x36, 0x30, 0x30, 0x30, 0x30, 0xfc, 0x30, 0x30, 0x30, 0x00},
	{0x00, 0x00, 0x7e, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x18, 0x3c, 0x3c, 0x66, 0x66, 0xc3, 0xc3, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xc3, 0xe7, 0xff, 0xdb, 0xc3, 0xc3, 0xc3, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xc3, 0x66, 0x3c, 0x18, 0x3c, 0x66, 0xc3, 0x00, 0x00, 0x00, 0x00},
	{0xc0, 0x60, 0x60, 0x30, 0x18, 0x3c, 0x66, 0x66, 0xc3, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xff, 0x60, 0x30, 0x18, 0x0c, 0x06, 0xff, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x0f, 0x18, 0x18, 0x18, 0x38, 0xf0, 0x38, 0x18, 0x18, 0x18, 0x0f},
	{0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18},
	{0x00, 0x00, 0xf0, 0x18, 0x18, 0x18, 0x1c, 0x0f, 0x1c, 0x18, 0x18, 0x18, 0xf0},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x8f, 0xf1, 0x60, 0x00, 0x00, 0x00}  // :126
};

void drawChar(char c, uint8_t x, uint8_t y) {
	uint8_t i = c - 32;
	if (i > 94) return;
	for (uint8_t h = 0; h < 13; h++) {
		for (uint8_t w = 0; w <= 8; w++) {
			PlotPixel(x + w, y + 13 - h, (letters[i][h] & 1 << (8-w) ? 1 : 0));
		}
	}
}

void drawString(const char *str, uint8_t size, uint8_t x, uint8_t y) {
	for (int i = 0; i < size; i++) {
		drawChar(str[i], x, y);
		x += 9;
	}
}

uint8_t checker[] = {0x00, 0x07, 0x00, 0x7F, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x35, 0x25, 0x2D, 0x29, 0x2B, 0x2A, 0x2A, 0x6A, 0x4A, 0x5A, 0x52, 0x56, 0x54, 0x55, 0x55, 0x15, 0x20};